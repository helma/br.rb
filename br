#!/usr/bin/env ruby
require 'webkit'
require 'net/http'
require 'yaml'

@insert = false
search = ""
history = File.join(ENV['HOME'],".br","history")
`cp #{history} #{history}~`
`tail -n 10000 #{history}~ > #{history}`
bookmark = File.join(ENV['HOME'],".br","bookmark")
edit = File.join(ENV['HOME'],".br","edit.tmp")
login_file = File.join(ENV['HOME'],".br","login.yaml")
@login = YAML.load_file login_file

def full_uri(args)
  #searchengine="http://www.google.com/search?q="
  searchengine="http://goosh.org/#"
  args.size == 1 ?  uri = args.first : uri = searchengine+args.join("+")
  uri ||= serchengine
  unless uri =~ /^http|^file/
    if File.exists?(uri)
      uri = "file:///"+`pwd`+'/'+uri
    else
      begin
        Net::HTTP.get_response(URI("http://"+uri)) # Get the HTTP_RESPONSE from the site we are checking
        uri = "http://"+uri
      rescue
        uri = searchengine+uri.to_s
      end
    end
  end
  uri
end

def insertmode_on
  @insert = true
  @sw.border_width = 2
  @win.modify_bg(Gtk::STATE_NORMAL,Gdk::Color.parse("red"))
end

def insertmode_off
  @insert = false
  @sw.border_width = 0
  @win.modify_bg(Gtk::STATE_NORMAL,Gdk::Color.parse("grey"))
end

def login
  host = URI(@wv.get_uri).host
  @wv.execute_script "$('input:text').val('#{@login[host][:user]}');"
  @wv.execute_script "$('input:password').val('#{@login[host][:password]}');"
  @wv.execute_script "$('input:submit').click();"
end

clipboard = Gtk::Clipboard.get(Gdk::Selection::CLIPBOARD)
@sw = Gtk::ScrolledWindow.new(nil, nil)
@wv = Gtk::WebKit::WebView.new
@wv.settings.enable_page_cache=true
@sw.add @wv
@win = Gtk::Window.new
@win.add(@sw)

@win.signal_connect("key-press-event") do |w,e|
  if Gdk::Keyval.to_name(e.keyval) == "Escape"
    insertmode_off
    @wv.stop_loading
  end
  unless @insert
    case Gdk::Keyval.to_name(e.keyval)
    when "b"
      @wv.open File.read(bookmark).chomp# unless bookmark.empty?
    when "m"
      `echo "#{@wv.get_uri}" > #{bookmark} `
    when "P"
      @wv.execute_script("window.print();")
    when "g"
      @sw.vadjustment.value = 0
    when "G"
      @sw.vadjustment.value = @sw.vadjustment.upper - @sw.vadjustment.page_size
    when "j"
      @sw.vadjustment.value = [@sw.vadjustment.upper - @sw.vadjustment.page_size,@sw.vadjustment.value + @sw.vadjustment.step_increment].min
    when "k"
      @sw.vadjustment.value = [0,@sw.vadjustment.value - @sw.vadjustment.step_increment].max
    when "S"
      Process.spawn("wget -O /tmp/br-source.html #{@wv.get_uri} && xterm -e \"vim -c 'set filetype=html' /tmp/br-source.html\" &")
    when "i"
      insertmode_on
    when "r"
      @wv.reload
    when "y"
      clipboard.text = @wv.get_uri
      clipboard.store
    when "p"
      @wv.open full_uri(clipboard.wait_for_text)
    when "o"
      @wv.open full_uri(`br-history|dmenu -b -l 10`)
    when "h"
      @wv.go_back
    when "l"
      @wv.go_forward
    when "slash"
      search = `echo "#{search}"| dmenu -b`.chomp
      @wv.search_text search,false,true,true
    when "n"
      @wv.search_text search,false,true,true
    when "E"
      @wv.execute_script "console.log('value='+document.activeElement.value)"
      `xterm -e vim #{edit}`
      @wv.execute_script "document.activeElement.value = '#{File.read(edit).chomp}';"
      File.delete edit
    when "C"
      Process.spawn("chromium #{@wv.get_uri}")
      Gtk.main_quit
    when "L"
      File.open(login_file, "a+"){|f| f.puts "\n#{URI(@wv.get_uri).host}:\n\t:user: \n\t:password: "}
      `xterm -e vim + +k #{login_file}`
      @login = YAML.load_file login_file
      login
    when "q"
      Gtk.main_quit
    end
  end
end

@win.signal_connect("destroy") { Gtk.main_quit }

@wv.signal_connect("console-message") do |w,message|
  case message
  when /insertmode/
    send message.to_sym
  when /^value=/
    File.open(edit,"w+"){|f| f.puts message.sub(/^value=/,'')}
  end
end

@wv.signal_connect("download-requested") do |w,download|
  download.set_destination_uri File.join("file://",ENV['HOME'],"Downloads",download.suggested_filename)
end

@wv.signal_connect("create-web-view") do |w,f,d| 
  @wv.open @wv.get_uri # do not open a new window
end

@wv.signal_connect("document-load-finished") do |w|
  @wv.execute_script File.read(File.join(File.dirname(__FILE__),"jquery-1.7.1.min.js"))
  @wv.execute_script(File.read(File.join(File.dirname(__FILE__),"input-focus.js")))
  @wv.get_uri.match(%r{docs.google.com|goosh.org}) ?  insertmode_on : insertmode_off
  last = `tail -n 1 #{history}`.chomp
  File.open(history, "a+"){|f| f.puts @wv.get_uri} if @wv.get_uri and !@wv.get_uri.empty? and @wv.get_uri != last
  login if @login.keys.include? URI(@wv.get_uri).host
end

if ARGV.empty?
  @wv.load_html_string(ARGF.read)
else
  @wv.open full_uri(ARGV)
end
@win.show_all
Gtk.main
